---
description: Playwright Testing
globs: tests/*.js
---
# Playwright Testing Rules

## Testing Philosophy
- Test user-visible behavior, not implementation details
- Keep tests isolated and independent
- Focus on end-to-end user journeys
- Test server-rendered content and interactions

## Testing Strategy

### Element Scoping and Selectors
- Always scope element checks to their containing parent
- Use table rows as scopes for row content
- Use `filter()` with `has:` to find specific containers
- Avoid global page-level selectors when elements are nested

#### Selector Priority
1. Role-based with exact text: `getByRole('button', { name: 'Submit', exact: true })`
2. ARIA labels: `getByLabel('Search')`
3. Component-specific classes with text: `locator('.govuk-details__summary-text', { hasText: 'Details' })`
4. Generic text matching as last resort: `getByText('Content')`

### State and Interaction Testing
- Test both initial and changed states
- Verify all interactive behaviors
- Test keyboard interactions
- Check attribute changes after interactions
- Test components in both default and error states

## Test Structure
- Place tests in `/tests` directory with `.spec.js` extension
- Group related tests using `test.describe()`
- Use `test.beforeEach()` for common setup
- Clear test naming: "should <expected behavior> when <condition>"
- Always use ES Module syntax with named imports

## GDS Component Testing

### Common GDS Component Selectors
- Details Component:
  ```javascript
  // Target summary text
  page.locator('.govuk-details__summary-text', { hasText: 'Summary Text' })
  // Target content
  page.locator('.govuk-details__text').filter({ hasText: 'Content Text' })
  ```
- Table Component:
  ```javascript
  // Target table by caption
  page.getByRole('table', { name: 'Caption Text' })
  // Target specific row
  page.getByRole('row', { name: 'Row Content' })
  // Target elements within a row (scoped selectors)
  const row = page.getByRole('row', { name: 'Row Content' });
  row.locator('.govuk-tag')  // Only finds tags within this row
  ```
- Tags:
  ```javascript
  // Target tag by text
  page.locator('.govuk-tag', { hasText: 'Tag Text' })
  // Check for color variants
  await expect(tag).toHaveClass(/govuk-tag--blue/)  // Blue variant
  await expect(tag).toHaveClass(/govuk-tag--green/) // Green variant
  await expect(tag).toHaveClass(/govuk-tag--red/)   // Red variant
  ```
- Buttons:
  ```javascript
  page.getByRole('button', { name: 'Button Text' })
  ```

### GDS Component Testing Patterns
- Details Component:
  - Test summary text visibility
  - Test expand/collapse functionality
  - Verify content rendering
  - Check keyboard accessibility
- Tables:
  - Verify caption and headers
  - Test responsive behavior
  - Check cell content
- Form Components:
  - Test validation messages
  - Check error summary links
  - Verify hint text

## Accessibility Testing
- Integrate axe-core for automated accessibility checks
- Test keyboard navigation flows
- Verify screen reader announcements
- Test color contrast compliance
- Check ARIA attributes and roles

## Server-Side Testing Considerations
- Test complete user journeys
- Verify server-rendered content
- Test form submissions and redirects
- Check error pages and status codes
- Verify session handling
- Test navigation flows
