---
description: Playwright Testing
globs: tests/*.js
---
# Playwright Testing Standards

## Testing Philosophy
- Test user-visible behavior, not implementation details
- Keep tests isolated and independent
- Mock external dependencies and network calls
- Use data-test attributes sparingly, prefer role-based selectors

## Test Structure
- Place tests in `/tests` directory with `.spec.js` extension
- Group related tests using `test.describe()`
- Use `test.beforeEach()` for common setup
- Clear test naming: "should <expected behavior> when <condition>"

## GDS Component Testing
- Use role-based selectors: `getByRole('button', { name: 'Continue' })`
- Test error states and validation messages
- Verify error summary links focus corresponding fields
- Test back links and navigation patterns
- Check responsive behavior at GDS breakpoints

## Accessibility Testing
- Integrate axe-core for automated accessibility checks
- Test keyboard navigation flows
- Verify screen reader announcements
- Test color contrast compliance
- Check ARIA attributes and roles

## Network and Data Handling
- Mock external API calls using page.route()
- Use test data fixtures for consistent state
- Reset database/state between tests
- Handle authentication consistently

## Best Practices
- Test components in both default and error states
- Verify form validation messages
- Test responsive layouts at GDS breakpoints
- Ensure proper heading hierarchy
- Write focused, atomic tests

## Performance Considerations
- Minimize test setup/teardown overhead
- Reuse authentication state where possible
- Use test.parallel() for independent tests
- Implement proper waiting strategies